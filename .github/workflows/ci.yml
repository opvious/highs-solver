name: CI
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
env:
  NAPI_VERSION: 8
  BINDING_NAME: highs_solver
jobs:
  test:
    name: Test
    timeout-minutes: 10
    runs-on: ubuntu-latest
    outputs:
      tagged: ${{ format(steps.check-version.outputs.exists == 'false') }}
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          cache: pnpm
          registry-url: https://npm.pkg.github.com
      - name: Install
        run: pnpm i --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GPR_RO_TOKEN }}
      - name: Lint
        run: pnpm run lint
      - name: Build addon binding
        run: |
          pnpm -F highs-solver-addon run build \
            --CDCMAKE_CXX_COMPILER_LAUNCHER=ccache
      - name: Test
        run: pnpm t
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: out/coverage
      - name: Extract version
        id: extract-version
        run: |
          PACKAGE_VERSION="$(node -p 'require("./package.json").version')"
          echo "::set-output name=version::$PACKAGE_VERSION"
      - name: Check if tag exists
        uses: mukunku/tag-exists-action@v1.1.0
        id: check-version
        with:
          tag: v${{ steps.extract-version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create tag
        if: steps.check-version.outputs.exists == 'false'
        uses: pkgdeps/git-tag-action@v2
        with:
          git_commit_sha: ${{ github.sha }}
          git_tag_prefix: v
          github_repo: ${{ github.repository }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ steps.extract-version.outputs.version }}
  prebuild:
    strategy:
      matrix:
        include:
          - os: macos-11
            arch: arm64
          - os: macos-10.15
            arch: x64
          - os: ubuntu-18.04
            arch: x64
    name: Prebuild ${{ matrix.arch }} bindings on ${{ matrix.os }}
    timeout-minutes: 15
    runs-on: ${{ matrix.os }}
    needs: test
    if: needs.test.outputs.tagged == 'true'
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          cache: pnpm
          registry-url: https://npm.pkg.github.com
      - name: Install
        run: pnpm i
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GPR_RO_TOKEN }}
      - name: Generate addon prebuild
        run: |
          pnpm -F highs-solver-addon exec pkg-prebuilds-copy \
            --napi_version=$NAPI_VERSION \
            --source build/Release/$BINDING_NAME.node \
            --name=$BINDING_NAME \
            --strip
      - name: Git status
        run: git status -v
      - name: Upload prebuild
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}-${{ matrix.arch }}-${{ matrix.libc }}-prebuilds
          path: packages/highs-solver-addon/prebuilds
          retention-days: 1
  publish:
    name: Publish packages
    timeout-minutes: 5
    needs: prebuild
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          cache: pnpm
          registry-url: https://npm.pkg.github.com
      - name: Install
        run: pnpm i --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GPR_RO_TOKEN }}
      - name: Download prebuilds
        uses: actions/download-artifact@v3
        with:
          path: packages/highs-solver-addon/prebuilds
      - name: Point to NPM registry
        uses: actions/setup-node@v3
        with:
          cache: pnpm
          registry-url: https://registry.npmjs.org
      - name: List files
        run: |
          git status -v
          ls packages/highs-solver-addon/prebuilds
      - name: Publish
        run: pnpm -r exec pnpm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
