name: PR
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
env:
  BINDING_NAME: highs_addon
  NAPI_VERSION: 8
jobs:
  # test:
  #   name: Test
  #   timeout-minutes: 10
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out
  #       uses: actions/checkout@v3
  #     - name: Set up ccache
  #       uses: hendrikmuhs/ccache-action@v1.2
  #     - name: Setup pnpm
  #       uses: pnpm/action-setup@v2
  #       with:
  #         version: 8
  #     - name: Set up Node
  #       uses: actions/setup-node@v3
  #       with:
  #         cache: pnpm
  #         registry-url: https://npm.pkg.github.com
  #     - name: Install
  #       run: pnpm i --ignore-scripts
  #       env:
  #         NODE_AUTH_TOKEN: ${{ secrets.GPR_RO_TOKEN }}
  #     - name: Lint
  #       run: pnpm run lint
  #     - name: Build addon binding
  #       run: |
  #         pnpm -F highs-addon run build \
  #           --CDCMAKE_CXX_COMPILER_LAUNCHER=ccache
  #     - name: Test
  #       run: pnpm t
  #     - name: Upload coverage
  #       uses: codecov/codecov-action@v3
  #       with:
  #         token: ${{ secrets.CODECOV_TOKEN }}
  #         directory: out/coverage
  prebuild-docker:
    strategy:
      matrix:
        include:
          - key: linux-x64-musl
            image: node:18-alpine
            platform: linux/amd64
            libc: musl
          - key: linux-arm64
            image: node:18
            platform: linux/arm64
            libc: glibc
          - key: linux-arm64-musl
            image: node:18-alpine
            platform: linux/arm64
            libc: musl
    name: Prebuild ${{ matrix.key }}
    timeout-minutes: 25
    runs-on: ubuntu-latest
    # needs: test
    # if: needs.test.outputs.tagged == 'true'
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          cache: pnpm
          registry-url: https://npm.pkg.github.com
      - name: Install
        run: pnpm i --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GPR_RO_TOKEN }}
      - name: Generate addon prebuild via Docker
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ matrix.image }}
          options: >-
            --platform=${{ matrix.platform }}
            -v ${{ github.workspace }}:/workspace
            -e NAPI_VERSION
            -e BINDING_NAME
          run: |
            if command -v apk; then
              apk update
              apk add clang clang-dev cmake gcc git g++ libc-dev libstdc++ linux-headers make
            elif command -v apt-get; then
              apt-get update
              apt-get -y install cmake
            fi
            cd workspace/packages/highs-addon
            npm run build
            npm exec pkg-prebuilds-copy -- \
              --napi_version=$NAPI_VERSION \
              --source build/Release/$BINDING_NAME.node \
              --name=$BINDING_NAME \
              --libc=${{ matrix.libc }} \
              --strip
